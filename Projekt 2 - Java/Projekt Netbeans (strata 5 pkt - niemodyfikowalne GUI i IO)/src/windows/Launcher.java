/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;

import cells.Cells;
import automaton.CellularAutomatonIO;
import automaton.CellsIOException;
import automaton.neighbourhood.NormalNeighbourhood;
import automaton.rules.AutomatonRules;
import automaton.rules.Life;
import automaton.rules.WireWorld;
import automaton.RulesIOException;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import windows.GUI;
import easyautomatonexample.WarGUI;

/**
 *
 * @author shafe_000
 */
public class Launcher extends javax.swing.JFrame {

    /**
     * Creates new form Launcher
     */
    public Launcher() {
        initComponents();
        jSpinnerY.setValue(30);
        jSpinnerX.setValue(40);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxWrapped = new javax.swing.JCheckBox();
        jLabelNeightbourhood = new javax.swing.JLabel();
        jCheckBoxLife = new javax.swing.JCheckBox();
        jCheckBoxWireWorld = new javax.swing.JCheckBox();
        jSpinnerY = new javax.swing.JSpinner();
        jSpinnerX = new javax.swing.JSpinner();
        jLabelX = new javax.swing.JLabel();
        jLabelY = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelRules = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jCheckBoxNormal = new javax.swing.JCheckBox();
        jButtonReadFile = new javax.swing.JButton();
        jButtonNew = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jCheckBoxWrapped.setSelected(true);
        jCheckBoxWrapped.setText("Zawijane");
        jCheckBoxWrapped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWrappedActionPerformed(evt);
            }
        });

        jLabelNeightbourhood.setText("Granice:");

        jCheckBoxLife.setText("Gra w życie");
        jCheckBoxLife.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLifeActionPerformed(evt);
            }
        });

        jCheckBoxWireWorld.setSelected(true);
        jCheckBoxWireWorld.setText("WireWorld");
        jCheckBoxWireWorld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWireWorldActionPerformed(evt);
            }
        });

        jSpinnerY.setValue(10);

        jSpinnerX.setValue(10);

        jLabelX.setText("Szerokość:");

        jLabelY.setText("Wysokość:");

        jLabelRules.setText("Zasady:");

        jLabelTitle.setFont(new java.awt.Font("Proxy 9", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("AUTOMAT KOMÓRKOWY");

        jCheckBoxNormal.setText("Normalne");
        jCheckBoxNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNormalActionPerformed(evt);
            }
        });

        jButtonReadFile.setText("Wczytaj siatkę");
        jButtonReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadFileActionPerformed(evt);
            }
        });

        jButtonNew.setText("Nowa siatka");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelX)
                            .addComponent(jLabelY, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerY, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerX, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxLife)
                            .addComponent(jCheckBoxWireWorld)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabelRules, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabelNeightbourhood, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxNormal)
                                    .addComponent(jCheckBoxWrapped)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonReadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelX)
                            .addComponent(jSpinnerX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelY)
                            .addComponent(jSpinnerY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jCheckBoxLife)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxWireWorld))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRules)
                            .addComponent(jLabelNeightbourhood))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxWrapped)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxNormal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxWrappedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWrappedActionPerformed
        jCheckBoxNormal.setSelected(false);
        jCheckBoxWrapped.setSelected(true);
    }//GEN-LAST:event_jCheckBoxWrappedActionPerformed

    private void jCheckBoxNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNormalActionPerformed
        jCheckBoxWrapped.setSelected(false);
        jCheckBoxNormal.setSelected(true);
    }//GEN-LAST:event_jCheckBoxNormalActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        int x;
        int y;
        final AutomatonRules rules;
        
        if ("-404".equals(jSpinnerX.getValue().toString())) {
            this.dispose();
            new WarGUI();
        } else {

            try {
                y = Integer.parseInt(jSpinnerY.getValue().toString());
            } catch (NumberFormatException e) {
                y = -1;
            }

            try {
                x = Integer.parseInt(jSpinnerX.getValue().toString());
            } catch (NumberFormatException e) {
                x = -1;
            }

            if (x >= 1000) {
                JOptionPane.showMessageDialog(null, "Szerokość powinna być mniejsza niż 1000!");
            } else if (y >= 1000) {
                JOptionPane.showMessageDialog(null, "Wysokość powinna być mniejsza niż 1000!");
            } else if (x < 1) {
                JOptionPane.showMessageDialog(null, "Błędna szerokość, wprowadź jeszcze raz!");
            } else if (y < 1) {
                JOptionPane.showMessageDialog(null, "Błędna wysokość, wprowadź jeszcze raz!");
            } else {
                try {
                    final Cells cells = new Cells(x, y);
                    dispose();
                    if ((jCheckBoxLife.isSelected()) && (jCheckBoxWrapped.isSelected())) {
                        rules = new AutomatonRules(new Life());
                    } else if ((jCheckBoxLife.isSelected()) && (jCheckBoxNormal.isSelected())) {
                        rules = new AutomatonRules(new Life(new NormalNeighbourhood()));
                    } else if ((jCheckBoxWireWorld.isSelected()) && (jCheckBoxNormal.isSelected())) {
                        rules = new AutomatonRules(new WireWorld(new NormalNeighbourhood()));
                    } else {
                        rules = new AutomatonRules(new WireWorld());
                    }

                    java.awt.EventQueue.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            new GUI(rules, cells);
                        }
                    });

                } catch (OutOfMemoryError e) {
                    JOptionPane.showMessageDialog(null, "Rozmiary siatki są zbyt duże, proszę je zmniejszyć! ");
                }

            }
        }
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jCheckBoxLifeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLifeActionPerformed
        jCheckBoxWireWorld.setSelected(false);
        jCheckBoxLife.setSelected(true);
    }//GEN-LAST:event_jCheckBoxLifeActionPerformed

    private void jCheckBoxWireWorldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWireWorldActionPerformed
        jCheckBoxLife.setSelected(false);
        jCheckBoxWireWorld.setSelected(true);
    }//GEN-LAST:event_jCheckBoxWireWorldActionPerformed

    private void jButtonReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Pliki automatu komórkowego (.automat)", "automat"));
        fileChooser.setCurrentDirectory(new File("."));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                CellularAutomatonIO.openFromFile(fileChooser.getSelectedFile());
                dispose();
            } catch (CellsIOException | IOException | RulesIOException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }

        }
    }//GEN-LAST:event_jButtonReadFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Launcher.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Launcher.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Launcher.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Launcher.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Launcher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonReadFile;
    private javax.swing.JCheckBox jCheckBoxLife;
    private javax.swing.JCheckBox jCheckBoxNormal;
    private javax.swing.JCheckBox jCheckBoxWireWorld;
    private javax.swing.JCheckBox jCheckBoxWrapped;
    private javax.swing.JLabel jLabelNeightbourhood;
    private javax.swing.JLabel jLabelRules;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelX;
    private javax.swing.JLabel jLabelY;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerX;
    private javax.swing.JSpinner jSpinnerY;
    // End of variables declaration//GEN-END:variables
}
